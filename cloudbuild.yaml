steps:
  # Try to pull cached images
  - name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
      - -c
      - |
        docker pull gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest || true
        docker pull gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_SANITIZED_BRANCH_NAME}-latest || true
    env:
      - DOCKER_BUILDKIT=1

  # Build image with cache
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t
      - gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest
      - -t
      - gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA
      - -t
      - gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_SANITIZED_BRANCH_NAME}-latest
      - --cache-from
      - gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest
      - --cache-from
      - gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_SANITIZED_BRANCH_NAME}-latest
      - --build-arg
      - BUILDKIT_INLINE_CACHE=1
      - -f
      - Dockerfile
      - .
    env:
      - DOCKER_BUILDKIT=1

  # Push images
  - name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
      - -c
      - |
        docker push gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest
        docker push gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA
        docker push gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_SANITIZED_BRANCH_NAME}-latest

  # Deploy to Cloud Run
  - name: gcr.io/cloud-builders/gcloud
    args:
      - run
      - deploy
      - ${_IMAGE_NAME}
      - --image=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA
      - --region=${_REGION}
      - --platform=managed
      - --set-env-vars=COMMIT_SHA=$COMMIT_SHA
      - --set-env-vars=FIREBASE_PROJECT_ID=${_FIREBASE_PROJECT_ID}
      - --set-env-vars=ALLOWED_ORIGINS=${_ALLOWED_ORIGINS}
      - --set-secrets=RESEND_API_KEY=${_RESEND_API_KEY}
      - --set-env-vars=GOOGLE_CLIENT_EMAIL=${_GOOGLE_CLIENT_EMAIL}
      - --set-secrets=GOOGLE_PRIVATE_KEY=${_GOOGLE_PRIVATE_KEY}
      - --set-env-vars=CALENDAR_ID=${_CALENDAR_ID}
      - --set-env-vars=BACKOFFICE_URL=${_BACKOFFICE_URL}
      - --set-env-vars=BOOKING_COLLECTION_NAME=${_BOOKING_COLLECTION_NAME}
      - --set-env-vars=PROGRAM_COLLECTION_NAME=${_PROGRAM_COLLECTION_NAME}
      - --set-env-vars=PACKAGE_COLLECTION_NAME=${_PACKAGE_COLLECTION_NAME}
      - --set-secrets=SENDGRID_API_KEY=${_SENDGRID_API_KEY}
      - --set-secrets=SENDGRID_FROM_EMAIL=${_SENDGRID_FROM_EMAIL}
      - --set-env-vars=SENDGRID_TEMPLATE_BOOKING_PENDING=${_SENDGRID_TEMPLATE_BOOKING_PENDING}
      - --set-env-vars=SENDGRID_TEMPLATE_BOOKING_CONFIRMED=${_SENDGRID_TEMPLATE_BOOKING_CONFIRMED}
      - --set-env-vars=SENDGRID_TEMPLATE_BOOKING_CANCELED=${_SENDGRID_TEMPLATE_BOOKING_CANCELED}
timeout: 1000s

options:
  dynamicSubstitutions: true
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _IMAGE_NAME: deflora-spa-service
  _SANITIZED_BRANCH_NAME: '${BRANCH_NAME//\//-}'
  _REGION: asia-southeast1

  # Environment variables
  _FIREBASE_PROJECT_ID: "defloraspa-c018d"
  _ALLOWED_ORIGINS: "https://deflora-spa-backoffice.vercel.app;https://deflora-spa-booking.vercel.app"
  _RESEND_API_KEY: "resend-api-key:latest"

  # Google Calendar
  _GOOGLE_CLIENT_EMAIL: "deflora-spa-calendar@defloraspa-c018d.iam.gserviceaccount.com"
  _GOOGLE_PRIVATE_KEY: "deflora-spa-calendar-private-key:latest"
  _CALENDAR_ID: "palmch2542@gmail.com"

  _BACKOFFICE_URL: "https://deflora-spa-backoffice.vercel.app"

  _BOOKING_COLLECTION_NAME: "bookings"
  _PROGRAM_COLLECTION_NAME: "programs"
  _PACKAGE_COLLECTION_NAME: "packages"

  _SENDGRID_API_KEY: "sendgrid-api-key:latest"
  _SENDGRID_FROM_EMAIL: "support@defloraspa.com"
  _SENDGRID_TEMPLATE_BOOKING_PENDING: "d-8f8e4b41d7cf4a0cbe41ac72b73de572"
  _SENDGRID_TEMPLATE_BOOKING_CONFIRMED: "d-63b284e3cb414282a0fd5cc3882a6013"
  _SENDGRID_TEMPLATE_BOOKING_CANCELED: "d-2fcb3de8f9c5418492cba45930648ef9"
