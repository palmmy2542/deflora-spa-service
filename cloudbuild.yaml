steps:
  - name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
      - -c
      - |
        docker pull gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest || true
        docker pull gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_SANITIZED_BRANCH_NAME}-latest || true
    env:
      - DOCKER_BUILDKIT=1

  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t
      - gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest
      - -t
      - gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA
      - -t
      - gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_SANITIZED_BRANCH_NAME}-latest
      - --cache-from
      - gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest
      - --cache-from
      - gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_SANITIZED_BRANCH_NAME}-latest
      - --build-arg
      - BUILDKIT_INLINE_CACHE=1
      - -f
      - Dockerfile
      - .
    env:
      - DOCKER_BUILDKIT=1

  - name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
      - -c
      - |
        docker push gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest
        docker push gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA
        docker push gcr.io/$PROJECT_ID/${_IMAGE_NAME}:${_SANITIZED_BRANCH_NAME}-latest

  - name: gcr.io/cloud-builders/gcloud
    args:
      - run
      - deploy
      - ${_IMAGE_NAME}
      - --image=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$SHORT_SHA
      - --region=${_REGION}
      - --platform=managed
      - --set-env-vars=COMMIT_SHA=$COMMIT_SHA
      - --set-env-vars=FIREBASE_PROJECT_ID=my-firebase-project
      - --set-env-vars=ALLOWED_ORIGINS=https://myfrontend.com
      - --update-secrets=RESEND_API_KEY=resend-api-key:latest

timeout: 1000s

options:
  dynamicSubstitutions: true
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _IMAGE_NAME: deflora-spa-service
  _SANITIZED_BRANCH_NAME: '${BRANCH_NAME//\//-}'
  _REGION: asia-southeast1
